# @echo off
# cls
# py -m pip install --upgrade pip
# curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
# python get-pip.py
# pip install pytube
# ____________________________________________________________________________________ 영상URL로 다운로드[SUCCESS]
# py
# from pytube import Playlist
# import os

# DOWNLOAD_FOLDER = r"C:\Users\WIN10PROPC3\Desktop"
# DOWNLOAD_FOLDER = "./DOWNLOAD_FOLDER"
# if os.path != 'DOWNLOAD_FOLDER':
    # os.mkdir('DOWNLOAD_FOLDER')
# os.chdir("DOWNLOAD_FOLDER")

# videoURLs=[
	# 'https://www.youtube.com/watch?v=baYdKYEAbdw&list=UULF5Ce1XGat0JJOXcFWZl1jcg&index=7',
	# 'https://youtube.com/watch?v=zy54whTgUiI',
	# 'https://youtube.com/watch?v=0dWqw-Gn-9Y'
# ]
# for i in range(0,len(videoURLs)):
    # from pytube import YouTube
    # yt = YouTube(videoURLs[i])
    # stream = yt.streams.get_highest_resolution()
    # stream.download(DOWNLOAD_FOLDER)
# ____________________________________________________________________________________ 채널리스트로 다운로드[대기]
# py
# playlist =Playlist('https://www.youtube.com/watch?v=DN-Ur5reNpU&list=UU3zABYmTxp_MyEEvFmekrFQ&ab_channel=%EB%8B%8C%EC%A3%BC')
# from pytube import Playlist
# playlist =Playlist(videoesURL)
# print('Number of videos in playlist: %s' % len(playlist.video_urls))


# for video in playlist.videos:
# try:
# print(video.streams.filter(file_extension='mp4'))
# stream = video.streams.get_by_itag(137) # 137 = 1080P30
# stream.download()
# except AttributeError:
# stream = video.streams.get_by_itag(22) # 22, 136 = 720P30; if 22 still don't work, try 136
# stream.download()
# except:
# print("Something went wrong.")

@echo off
cls
:: ____________________________________________________________________________________ 영상URL로 고화질 다운로드[in trying]
py
from pytube import Playlist, YouTube
from moviepy.editor import *
fpath = lambda x: './tmp_src/' + x
DOWNLOAD_FOLDER = "./DOWNLOAD_FOLDER"
if os.path != 'DOWNLOAD_FOLDER':
    os.mkdir('DOWNLOAD_FOLDER')

os.chdir("DOWNLOAD_FOLDER")

def ydown(url: str, prefix: str = "프리픽스"):
    yt = YouTube(url)
    vpath = (
        yt.streams.filter(adaptive=True, file_extension="mp4", only_video=True)
        .order_by("resolution")
        .desc()
        .first()
        .download(output_path=fpath("video/"), filename_prefix=f"{prefix} ")
    )
    apath = (
        yt.streams.filter(adaptive=True, file_extension="mp4", only_audio=True)
        .order_by("abr")
        .desc()
        .first()
        .download(output_path=fpath("audio/"), filename_prefix=f"{prefix} ")
    )
    v = VideoFileClip(vpath)
    a = AudioFileClip(apath)
    # video 와 audio 를 합한다.
    # v.audio = a
    # v.write_videofile(fpath(f"1080/{vpath.split('/')[-1]}"))
    # tmp_src 를 삭제한다.

def playlistdown(url: str, prefix: str = ""):
    pl = Playlist(url)
    for v in pl.video_urls:
        try:
            ydown(v, prefix)
        except:
            continue

videoURLs=[
	'https://www.youtube.com/watch?v=baYdKYEAbdw&list=UULF5Ce1XGat0JJOXcFWZl1jcg&index=7',
	'https://youtube.com/watch?v=zy54whTgUiI',
	'https://youtube.com/watch?v=0dWqw-Gn-9Y'
]
for i in range(0,len(videoURLs)):
    ydown(videoURLs[i])









